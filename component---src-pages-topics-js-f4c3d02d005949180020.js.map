{"version":3,"file":"component---src-pages-topics-js-f4c3d02d005949180020.js","mappings":"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","sources":["webpack://debrups_website/./src/utils/helpers.js","webpack://debrups_website/./src/pages/topics.js","webpack://debrups_website/./src/components/Hero.js"],"sourcesContent":["export function getSimplifiedPosts(posts, options = {}) {\n  return posts.map((post) => ({\n    id: post.node.id,\n    date: post.node.frontmatter.date,\n    slug: post.node.fields.slug,\n    tags: post.node.frontmatter.tags,\n    categories: post.node.frontmatter.categories,\n    title: post.node.frontmatter.title,\n    description: post.node.frontmatter.description,\n    ...(options.thumbnails && {\n      thumbnail: post.node.frontmatter?.thumbnail?.childImageSharp?.gatsbyImageData,\n    }),\n  }));\n}\n\nexport function getTaxonomyFromPosts(posts, taxonomy) {\n  return posts\n    .reduce((acc, post) => {\n      return [...new Set([...acc, ...(post[taxonomy] || [])])]\n    }, [])\n    .sort()\n}\n\nexport function slugify(string) {\n  return (\n    string &&\n    `${string}`\n      .match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )\n      .map((x) => x.toLowerCase())\n      .join('-')\n  )\n}\n\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport function appendComments() {\n  const commentDiv = document.getElementById('append-comments-here')\n  const commentScript = document.createElement('script')\n  const theme = window.localStorage.getItem('theme')\n\n  commentScript.async = true\n  commentScript.src = 'https://utteranc.es/client.js'\n  commentScript.setAttribute('repo', 'taniarascia/comments')\n  commentScript.setAttribute('issue-term', 'pathname')\n  commentScript.setAttribute('id', 'utterances')\n  commentScript.setAttribute(\n    'theme',\n    theme === 'light' ? 'github-light' : 'github-dark'\n  )\n  commentScript.setAttribute('crossorigin', 'anonymous')\n\n  if (!commentDiv.firstChild) {\n    commentDiv.appendChild(commentScript)\n  } else {\n    console.error('Error adding utterances comments')\n  }\n}\n\nexport function getFormattedDate(date, option = 2) {\n  const dateArr = date.split(' ')\n  if (dateArr[1].startsWith('0')) {\n    dateArr[1] = dateArr[1].slice(1, 2)\n  } else {\n    dateArr[1] = dateArr[1].slice(0, 2)\n  }\n\n  if (option === 1) {\n    return dateArr[0] + ' ' + dateArr[option]\n  }\n\n  dateArr[1] += ','\n\n  return dateArr[0] + ' ' + dateArr[option]\n}\n\nexport function isNewPost(date) {\n  const postDate = new Date(date)\n  const today = new Date()\n  const diffTime = Math.abs(today - postDate)\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))\n\n  if (diffDays < 50) return true\n}\n","import React, { useMemo } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport config from '../utils/config'\n\nimport { slugify } from '../utils/helpers'\nimport { PageLayout } from '../components/PageLayout'\nimport { Layout } from '../components/Layout'\nimport { Hero } from '../components/Hero'\n\nexport default function Topics({ data }) {\n  const tags = data.tags.group\n  const title = 'Topics'\n  const groupTags = useMemo(\n    () =>\n      tags.reduce((letterMap, tag) => {\n        const letter = tag.name.charAt(0)\n        const newArr = letterMap[letter] ? [...letterMap[letter], tag] : [tag]\n\n        return { ...letterMap, [letter]: newArr }\n      }, {}),\n    [tags]\n  )\n\n  return (\n    <>\n      <Helmet title={`${title} | ${config.siteTitle}`} />\n      <PageLayout>\n        <Hero title={title} />\n        {Object.entries(groupTags).map(([key, value]) => {\n          return (\n            <div key={key} className=\"alphabetical-tags\">\n              <h3>{key.toUpperCase()}</h3>\n              <div className=\"tags\">\n                {value.map((tag) => {\n                  return (\n                    <Link\n                      key={tag.name}\n                      to={`/topics/${slugify(tag.name)}`}\n                      className=\"button small\"\n                      activeClassName=\"active\"\n                    >\n                      <span>{tag.name}</span>\n                      <span className=\"tag-count\">{tag.totalCount}</span>\n                    </Link>\n                  )\n                })}\n              </div>\n            </div>\n          )\n        })}\n      </PageLayout>\n    </>\n  )\n}\n\nTopics.Layout = Layout\n\nexport const tagsQuery = graphql`\n  query TopicsQuery {\n    tags: allMarkdownRemark {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        name: fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport const Hero = ({\n  highlight,\n  subTitle,\n  title,\n  description,\n  children,\n  type = 'page',\n  breadcrumb,\n  hasSearch,\n}) => {\n  return (\n    <header\n      className={`hero hero-${type}`}\n      style={hasSearch ? { marginBottom: '1.5rem' } : {}}\n    >\n      {subTitle && (\n        <div className=\"sub-title\">\n          {breadcrumb && (\n            <div>\n              <Link to={breadcrumb.value}>{breadcrumb.label}</Link> /\n            </div>\n          )}\n          <div>\n            {highlight && <span className=\"highlight\">{highlight}</span>}\n            <span>{subTitle}</span>\n          </div>\n        </div>\n      )}\n      {title && <h1>{title}</h1>}\n      {description && (\n        <div\n          className=\"hero-description\"\n          style={hasSearch ? { marginBottom: '0' } : {}}\n        >\n          {description}\n        </div>\n      )}\n\n      {children}\n    </header>\n  )\n}\n"],"names":["getSimplifiedPosts","posts","options","map","post","_post$node$frontmatte","_post$node$frontmatte2","_post$node$frontmatte3","id","node","date","frontmatter","slug","fields","tags","categories","title","description","thumbnails","thumbnail","childImageSharp","gatsbyImageData","slugify","string","match","x","toLowerCase","join","getFormattedDate","option","dateArr","split","startsWith","slice","isNewPost","postDate","Date","today","diffTime","Math","abs","floor","Topics","_ref","data","group","groupTags","useMemo","reduce","letterMap","tag","letter","name","charAt","newArr","concat","_toConsumableArray","React","Helmet","config","siteTitle","PageLayout","Hero","Object","entries","_ref2","key","value","className","toUpperCase","Link","to","activeClassName","totalCount","Layout","highlight","subTitle","children","type","breadcrumb","hasSearch","style","marginBottom","label"],"sourceRoot":""}