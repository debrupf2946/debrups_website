{"version":3,"file":"component---src-pages-index-js-ebdf85318747a06938ef.js","mappings":"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","sources":["webpack://debrups_website/../src/image-utils.ts","webpack://debrups_website/../src/components/hooks.ts","webpack://debrups_website/../src/components/layout-wrapper.tsx","webpack://debrups_website/../src/components/picture.tsx","webpack://debrups_website/../src/components/placeholder.tsx","webpack://debrups_website/../src/components/main-image.tsx","webpack://debrups_website/../src/components/gatsby-image.server.tsx","webpack://debrups_website/../src/components/gatsby-image.browser.tsx","webpack://debrups_website/../src/components/static-image.server.tsx","webpack://debrups_website/../src/components/static-image.tsx","webpack://debrups_website/./src/utils/helpers.js","webpack://debrups_website/./node_modules/camelcase/index.js","webpack://debrups_website/./src/components/Post.js","webpack://debrups_website/./src/components/Posts.js","webpack://debrups_website/./src/components/Heading.js","webpack://debrups_website/./src/pages/index.js","webpack://debrups_website/./src/components/SEO.js","webpack://debrups_website/./src/data/projectsList.js","webpack://debrups_website/./src/components/Hero.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","export function getSimplifiedPosts(posts, options = {}) {\n  return posts.map((post) => ({\n    id: post.node.id,\n    date: post.node.frontmatter.date,\n    slug: post.node.fields.slug,\n    tags: post.node.frontmatter.tags,\n    categories: post.node.frontmatter.categories,\n    title: post.node.frontmatter.title,\n    description: post.node.frontmatter.description,\n    ...(options.thumbnails && {\n      thumbnail: post.node.frontmatter?.thumbnail?.childImageSharp?.gatsbyImageData,\n    }),\n  }));\n}\n\nexport function getTaxonomyFromPosts(posts, taxonomy) {\n  return posts\n    .reduce((acc, post) => {\n      return [...new Set([...acc, ...(post[taxonomy] || [])])]\n    }, [])\n    .sort()\n}\n\nexport function slugify(string) {\n  return (\n    string &&\n    `${string}`\n      .match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )\n      .map((x) => x.toLowerCase())\n      .join('-')\n  )\n}\n\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport function appendComments() {\n  const commentDiv = document.getElementById('append-comments-here')\n  const commentScript = document.createElement('script')\n  const theme = window.localStorage.getItem('theme')\n\n  commentScript.async = true\n  commentScript.src = 'https://utteranc.es/client.js'\n  commentScript.setAttribute('repo', 'taniarascia/comments')\n  commentScript.setAttribute('issue-term', 'pathname')\n  commentScript.setAttribute('id', 'utterances')\n  commentScript.setAttribute(\n    'theme',\n    theme === 'light' ? 'github-light' : 'github-dark'\n  )\n  commentScript.setAttribute('crossorigin', 'anonymous')\n\n  if (!commentDiv.firstChild) {\n    commentDiv.appendChild(commentScript)\n  } else {\n    console.error('Error adding utterances comments')\n  }\n}\n\nexport function getFormattedDate(date, option = 2) {\n  const dateArr = date.split(' ')\n  if (dateArr[1].startsWith('0')) {\n    dateArr[1] = dateArr[1].slice(1, 2)\n  } else {\n    dateArr[1] = dateArr[1].slice(0, 2)\n  }\n\n  if (option === 1) {\n    return dateArr[0] + ' ' + dateArr[option]\n  }\n\n  dateArr[1] += ','\n\n  return dateArr[0] + ' ' + dateArr[option]\n}\n\nexport function isNewPost(date) {\n  const postDate = new Date(date)\n  const today = new Date()\n  const diffTime = Math.abs(today - postDate)\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))\n\n  if (diffDays < 50) return true\n}\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React, { useMemo } from 'react'\nimport { Link } from 'gatsby'\n\nimport { isNewPost, getFormattedDate } from '../utils/helpers'\n\nexport const Post = ({ node, prefix, newspaper, query }) => {\n  let formattedDate\n\n  if (node.date) {\n    if (!newspaper) {\n      formattedDate = getFormattedDate(node.date, 1)\n    } else {\n      formattedDate = getFormattedDate(node.date)\n    }\n  }\n\n  const newPost = useMemo(() => isNewPost(node.date), [node.date])\n\n  const getTitle = (title, query) => {\n    if (query) {\n      const re = new RegExp(query.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n      const highlightStart = title.search(re)\n\n      if (highlightStart !== -1) {\n        const highlightEnd = highlightStart + query.length\n\n        return (\n          <div>\n            {title.slice(0, highlightStart)}\n            <strong className=\"searched\">\n              {title.slice(highlightStart, highlightEnd)}\n            </strong>\n            {title.slice(highlightEnd)}\n          </div>\n        )\n      }\n      return <div>{title}</div>\n    }\n    return <div>{title}</div>\n  }\n\n  return (\n    <Link\n      to={prefix ? `/${prefix}${node.slug}` : node.slug}\n      key={node.id}\n      className=\"post\"\n    >\n      <div>\n        {newPost && <div className=\"button x-small\">✨ New</div>}{' '}\n        {getTitle(node.title, query)}\n      </div>\n      <time>{formattedDate}</time>\n    </Link>\n  )\n}\n","import React, { useMemo } from 'react'\n\nimport { Post } from './Post'\n\nexport const Posts = ({\n  data = [],\n  showYears,\n  query,\n  prefix,\n  hideDate,\n  yearOnly,\n  ...props\n}) => {\n  const postsByYear = useMemo(() => {\n    const collection = {}\n\n    data.forEach((post) => {\n      const year = post.date?.split(', ')[1]\n\n      collection[year] = [...(collection[year] || []), post]\n    })\n\n    return collection\n  }, [data])\n  const years = useMemo(() => Object.keys(postsByYear).reverse(), [postsByYear])\n\n  if (showYears) {\n    return years.map((year) => (\n      <section className=\"year\" key={year}>\n        <h2>{year}</h2>\n        <div className=\"posts\">\n          {postsByYear[year].map((node) => (\n            <Post key={node.id} node={node} query={query} prefix={prefix} />\n          ))}\n        </div>\n      </section>\n    ))\n  } else {\n    return (\n      <div className={props.newspaper ? 'posts newspaper' : 'posts'}>\n        {data.map((node) => (\n          <Post\n            key={node.id}\n            node={node}\n            query={query}\n            prefix={prefix}\n            hideDate={hideDate}\n            yearOnly={yearOnly}\n            {...props}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport const Heading = ({ title, buttonText, description, slug }) => {\n  return (\n    <header className=\"heading\">\n      <h2>\n        <span>{title}</span>\n        {slug && (\n          <Link className=\"small\" to={slug}>\n            {buttonText}\n          </Link>\n        )}\n      </h2>\n      {description && <div className=\"description\">{description}</div>}\n    </header>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport Helmet from 'react-helmet'\n\nimport { Layout } from '../components/Layout'\nimport { Posts } from '../components/Posts'\nimport { SEO } from '../components/SEO'\nimport { Heading } from '../components/Heading'\nimport { Hero } from '../components/Hero'\nimport { PageLayout } from '../components/PageLayout'\nimport { projectsList } from '../data/projectsList'\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport config from '../utils/config'\n\nexport default function Index({ data }) {\n  const latestNotes = data.latestNotes.edges\n  const latestArticles = data.latestArticles.edges\n  const highlights = data.highlights.edges\n  const notes = useMemo(() => getSimplifiedPosts(latestNotes), [latestNotes])\n\n  const articles = useMemo(\n    () => getSimplifiedPosts(latestArticles),\n    [latestArticles]\n  )\n  const simplifiedHighlights = useMemo(\n    () => getSimplifiedPosts(highlights, { thumbnails: true }),\n    [highlights]\n  )\n\n  return (\n    <>\n      <Helmet title={config.siteTitle} />\n      <SEO />\n\n      <PageLayout>\n        <Hero title={\n          <div className=\"animated-title\">\n            <span className=\"wave\">👋</span>\n            <span className=\"typing-text\">Hey, I'm Debrup!</span>\n          </div>\n        } type=\"index\">\n          <div className=\"hero-wrapper\">\n            <div className=\"hero-content\">\n              <p className=\"hero-description fade-in-1\">\n                I'm an AI Engineer with experience in developing and deploying AI-driven solutions. I've contributed to open-source projects and have a strong background in machine learning and data science.\n              </p>\n              <p className=\"hero-description fade-in-2\">\n                I enjoy working on innovative projects, exploring new technologies, and continuously learning to enhance my skills.\n              </p>\n            </div>\n            <div className=\"hero-image-container\">\n              <img src=\"/images/debrup.png\" className=\"hero-image\" alt=\"Debrup Paul\" />\n            </div>\n          </div>\n        </Hero>\n\n        <section className=\"section-index experience-section\">\n          <Heading\n            title=\"Professional Experience\"\n            description=\"My journey in AI and Software Development\"\n          />\n          \n          <div className=\"experience-timeline\">\n            <div className=\"experience-item\">\n              <div className=\"experience-header\">\n                <h3>AI Engineer</h3>\n                <div className=\"experience-meta\">\n                  <span className=\"company\">OneByZero</span>\n                  <span className=\"duration\">February 2025</span>\n                </div>\n              </div>\n              <ul className=\"experience-details\">\n                <li>Developed and deployed a real-time AI-driven IVR (Interactive Voice Response) and Voice Agent solution tailored for the ASEAN region over Twilio.</li>\n                <li>Implemented, Deployed, and scaled the Faster Whisper Transcriber Service using WebSockets, migrating from Azure Speech with reduced latency and improved WER through server-side buffering and end-of-speech detection.</li>\n                <li>Integrated real-time noise reduction to enhance transcription accuracy and system performance.</li>\n              </ul>\n              <div className=\"skills-tags\">\n                <span>WebSockets</span>\n                <span>FasterWhisper</span>\n                <span>Ray</span>\n                <span>AWS EKS</span>\n                <span>Docker</span>\n                <span>AWS Bedrock</span>\n                <span>SileroVAD</span>\n                <span>Locust</span>\n              </div>\n            </div>\n\n            <div className=\"experience-item\">\n              <div className=\"experience-header\">\n                <h3>Google Summer of Code Contributor</h3>\n                <div className=\"experience-meta\">\n                  <span className=\"company\">C2SI, Score Labs</span>\n                  <span className=\"duration\">May 2024 - July 2024</span>\n                </div>\n              </div>\n              <ul className=\"experience-details\">\n                <li>Project aims to built Knowledge Graph over Text and Code Modalities over Documentations and perform retrieval for code generation and understanding.</li>\n                <li>Built 4 modules Knowledge Graph builder, Retriever, Experiments, Evaluator handling complete KG-RAG workflow.</li>\n                <li>Optimized retriever LLM's using 8,4 bit Quantization, PEFT methods served in Ollama for local usage.</li>\n              </ul>\n              <div className=\"skills-tags\">\n                <span>HuggingFace</span>\n                <span>PyTorch</span>\n                <span>Llama-Index</span>\n                <span>Neo4j</span>\n                <span>LangChain</span>\n                <span>Ollama</span>\n              </div>\n            </div>\n\n            <div className=\"experience-item\">\n              <div className=\"experience-header\">\n                <h3>NLP Research Intern</h3>\n                <div className=\"experience-meta\">\n                  <span className=\"company\">IIIT-Hyderabad, LTRC</span>\n                  <span className=\"duration\">2024</span>\n                </div>\n              </div>\n              <ul className=\"experience-details\">\n                <li>Utilized Knowledge graphs and transformer models for natural language generation from USR. Built an instance based dependency parser for generating Knowledge Graphs.</li>\n                <li>Mentored Sanskrit Scholars on NLP tasks and implementations.</li>\n              </ul>\n              <div className=\"skills-tags\">\n                <span>Keras 3.0</span>\n                <span>NLP</span>\n                <span>HuggingFace</span>\n                <span>Transformers</span>\n                <span>PyTorch</span>\n              </div>\n            </div>\n\n            <div className=\"experience-item\">\n              <div className=\"experience-header\">\n                <h3>Data Science Intern</h3>\n                <div className=\"experience-meta\">\n                  <span className=\"company\">Asanify Technologies</span>\n                  <span className=\"duration\">May 2023 - July 2023</span>\n                </div>\n              </div>\n              <ul className=\"experience-details\">\n                <li>Developed GlobalClients database and generated leads through Web Scraping, achieving 15% growth in foreign clients, built visualizations on scraped data using Tableau.</li>\n                <li>Designed and implemented an end-to-end Text-to-SQL pipeline, significantly reducing analysts' workload and enhancing efficiency by automating query generation.</li>\n              </ul>\n              <div className=\"skills-tags\">\n                <span>Scrappy</span>\n                <span>Auto-Scraper</span>\n                <span>Regex</span>\n                <span>llama-index</span>\n                <span>OpenAI</span>\n                <span>PineCone</span>\n                <span>Tableau</span>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"section-index education-section\">\n          <Heading\n            title=\"Education\"\n            description=\"Academic Background and Achievements\"\n          />\n          \n          <div className=\"education-timeline\">\n            <div className=\"education-item\">\n              <div className=\"education-header\">\n                <h3>Birla Institute of Technology and Science, Pilani</h3>\n                <div className=\"education-meta\">\n                  <div className=\"education-primary-info\">\n                    <span className=\"degree\">Integrated BE in Mechanical Engineering & MSc in Mathematics</span>\n                    <div className=\"education-timeline-info\">\n                      <span className=\"duration\">Apr 2021 - May 2026</span>\n                      <span className=\"dot-separator\">•</span>\n                      <span className=\"location\">Goa, India</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"education-content\">\n                <div className=\"coursework\">\n                  <h4>Relevant Coursework</h4>\n                  <div className=\"course-tags\">\n                    <span>Computer Programming</span>\n                    <span>Numerical Methods</span>\n                    <span>Foundation of Data Science</span>\n                  </div>\n                </div>\n                <div className=\"coursework\">\n                  <h4>Advanced Studies</h4>\n                  <div className=\"course-tags\">\n                    <span>Operation Research</span>\n                    <span>Statistical Inference</span>\n                    <span>Linear Algebra</span>\n                    <span>Probability and Statistics</span>\n                    <span>AI</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"education-item\">\n              <div className=\"education-header\">\n                <h3>Delhi Public School Ruby Park</h3>\n                <div className=\"education-meta\">\n                  <div className=\"education-primary-info\">\n                    <span className=\"degree\">Higher Secondary (CBSE)</span>\n                    <div className=\"education-timeline-info\">\n                      <span className=\"duration\">Apr 2008 - Apr 2021</span>\n                      <span className=\"dot-separator\">•</span>\n                      <span className=\"location\">Kolkata, India</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"education-content\">\n                <div className=\"achievements\">\n                  <div className=\"achievement-item\">\n                    <span className=\"achievement-label\">Class 12 (PCM):</span>\n                    <span className=\"achievement-score\">95%</span>\n                  </div>\n                  <div className=\"achievement-item\">\n                    <span className=\"achievement-label\">Class 10 (AISSCE):</span>\n                    <span className=\"achievement-score\">91%</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section id=\"connect\" className=\"section-index connect-section\">\n          <Heading\n            title=\"Connect\"\n            description=\"Let's get in touch!\"\n          />\n          <div className=\"connect-container\">\n            <div className=\"connect-grid\">\n              <a href=\"https://github.com/debruppaul\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"connect-item\">\n                <div className=\"connect-icon\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                    <path fill=\"currentColor\" d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/>\n                  </svg>\n                </div>\n                <span className=\"connect-label\">GitHub</span>\n              </a>\n              \n              <a href=\"https://linkedin.com/in/debruppaul\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"connect-item\">\n                <div className=\"connect-icon\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                    <path fill=\"currentColor\" d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n                  </svg>\n                </div>\n                <span className=\"connect-label\">LinkedIn</span>\n              </a>\n\n              <a href=\"mailto:f20212946@goa.bits-pilani.ac.in\" className=\"connect-item\">\n                <div className=\"connect-icon\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                    <path fill=\"currentColor\" d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"/>\n                  </svg>\n                </div>\n                <span className=\"connect-label\">Email</span>\n              </a>\n\n              <a href=\"https://twitter.com/debruppaul\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"connect-item\">\n                <div className=\"connect-icon\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n                    <path fill=\"currentColor\" d=\"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\"/>\n                  </svg>\n                </div>\n                <span className=\"connect-label\">Twitter</span>\n              </a>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"section-index\">\n          <Heading\n            title=\"Notes\"\n            slug=\"/notes\"\n            buttonText=\"See All\"\n            description=\"Personal notes about life, music, projects, and everything else.\"\n          />\n          <Posts data={notes} newspaper />\n        </section>\n\n        <section className=\"section-index\">\n          <Heading\n            title=\"Articles\"\n            slug=\"/blog\"\n            buttonText=\"See All\"\n            description=\"Guides, references, and tutorials.\"\n          />\n          <Posts data={articles} newspaper />\n        </section>\n\n        <section className=\"section-index\">\n          <Heading\n            title=\"Deep Dives\"\n            slug=\"/topics\"\n            buttonText=\"All Topics\"\n            description=\"Long-form tutorials on a variety of development topics.\"\n          />\n          <div className=\"cards\">\n            {simplifiedHighlights.map((post) => {\n              return (\n                <Link\n                  to={post.slug}\n                  className=\"card card-highlight\"\n                  key={`popular-${post.slug}`}\n                >\n                  {post.thumbnail && (\n                    <GatsbyImage image={post.thumbnail} alt=\"Thumbnail\" />\n                  )}\n                  <div>{post.title}</div>\n                </Link>\n              )\n            })}\n          </div>\n        </section>\n\n        <section>\n          <Heading\n            title=\"Projects\"\n            slug=\"/projects\"\n            buttonText=\"All Projects\"\n            description=\"Open-source projects I've worked on over the years.\"\n          />\n\n          <div className=\"cards\">\n            {projectsList\n              .filter((project) => project.highlight)\n              .map((project) => {\n                return (\n                  <div className=\"card\" key={`hightlight-${project.slug}`}>\n                    <time>{project.date}</time>\n                    <a\n                      href={`https://github.com/taniarascia/${project.slug}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {project.name}\n                    </a>\n                    <p>{project.tagline}</p>\n                    <div className=\"card-links\">\n                      {project.writeup && (\n                        <Link className=\"button small\" to={project.writeup}>\n                          Article\n                        </Link>\n                      )}\n                      <a\n                        className=\"button small\"\n                        href={project.url}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        Demo\n                      </a>\n                    </div>\n                  </div>\n                )\n              })}\n          </div>\n        </section>\n      </PageLayout>\n    </>\n  )\n}\n\nIndex.Layout = Layout\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    latestNotes: allMarkdownRemark(\n      limit: 3\n      sort: { frontmatter: { date: DESC } }\n      filter: {\n        frontmatter: {\n          template: { eq: \"post\" }\n          categories: { eq: \"Personal\" }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n    latestArticles: allMarkdownRemark(\n      limit: 3\n      sort: { frontmatter: { date: DESC } }\n      filter: {\n        frontmatter: {\n          template: { eq: \"post\" }\n          categories: { eq: \"Technical\" }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n    highlights: allMarkdownRemark(\n      limit: 12\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { categories: { eq: \"Highlight\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 40, height: 40, layout: FIXED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport config from '../utils/config'\n\nexport const SEO = ({ postNode, postPath, postSEO, customDescription }) => {\n  let title\n  let description\n  let image = config.siteLogo\n  let postURL\n\n  if (postSEO) {\n    const postMeta = postNode.frontmatter\n    title = postMeta.title\n    description = postNode.excerpt\n\n    if (postMeta.thumbnail) {\n      image = postMeta.thumbnail.childImageSharp.gatsbyImageData.src\n    }\n\n    postURL = `${config.siteUrl}${postPath}`\n  } else {\n    title = config.siteTitle\n    description = customDescription || config.description\n  }\n\n  image = `${config.siteUrl}${image}`\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: config.siteUrl,\n      name: title,\n      alternateName: title,\n    },\n  ]\n\n  if (postSEO) {\n    schemaOrgJSONLD.push(\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': postURL,\n              name: title,\n              image,\n            },\n          },\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        url: config.siteUrl,\n        name: title,\n        alternateName: title,\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description,\n      }\n    )\n  }\n\n  return (\n    <Helmet>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaOrgJSONLD)}\n      </script>\n\n      <meta property=\"og:url\" content={postSEO ? postURL : config.siteUrl} />\n      {postSEO && <meta property=\"og:type\" content=\"article\" />}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  )\n}\n","export const projectsList = [\n  {\n    name: 'AI-driven IVR System',\n    date: '2025',\n    slug: 'ivr-system',\n    tagline: 'Real-time AI-driven IVR and Voice Agent solution for ASEAN region',\n    highlight: true,\n  },\n  {\n    name: 'Knowledge Graph RAG',\n    date: '2024',\n    slug: 'knowledge-graph-rag',\n    tagline: 'Knowledge Graph over Text and Code Modalities for Documentation',\n    url: 'https://github.com/c2siorg/C2SI',\n    highlight: true,\n  },\n  {\n    name: 'Text-to-SQL Pipeline',\n    date: '2023',\n    slug: 'text-to-sql',\n    tagline: 'End-to-end Text-to-SQL pipeline for automated query generation',\n    highlight: true,\n  },\n  {\n    name: 'Hate Speech Detection',\n    date: '2024',\n    slug: 'hate-speech-detection',\n    tagline: 'Real-time hate speech detection using RNN-LSTM architecture',\n    highlight: true,\n  },\n  {\n    name: 'debrup.dev',\n    date: '2022',\n    slug: 'taniarascia.com',\n    tagline: 'The source of this website',\n  },\n  {\n    name: 'Keyboard Accordion',\n    date: '2022',\n    slug: 'accordion',\n    tagline: 'Play the accordion online!',\n    url: 'https://www.keyboardaccordion.com',\n    writeup: '/musical-instrument-web-audio-api',\n    highlight: true,\n  },\n  {\n    name: 'TakeNote',\n    date: '2020',\n    slug: 'takenote',\n    tagline: 'A free, open source notes app',\n    url: 'https://takenote.dev',\n    writeup: '/building-takenote',\n    highlight: true,\n  },\n  {\n    name: 'Chip8',\n    date: '2019',\n    slug: 'chip8',\n    tagline: 'A retro game emulator',\n    url: 'https://taniarascia.github.io/chip8',\n    writeup: '/writing-an-emulator-in-javascript-chip8',\n    highlight: true,\n  },\n  {\n    name: 'Sokoban',\n    date: '2021',\n    slug: 'sokoban',\n    tagline: 'A web-based Sokoban',\n    url: 'https://taniarascia.github.io/sokoban',\n    writeup: '/sokoban-game',\n    highlight: true,\n  },\n  {\n    name: 'New Moon',\n    date: '2015',\n    slug: 'new-moon',\n    tagline: 'The optimized dark theme',\n    url: 'https://taniarascia.github.io/new-moon',\n    highlight: true,\n  },\n  {\n    name: 'Laconia',\n    date: '2018',\n    slug: 'laconia',\n    tagline: 'An MVC framework from scratch',\n  },\n  {\n    name: 'Primitive',\n    date: '2017',\n    slug: 'primitive',\n    tagline: 'A front-end design toolkit',\n    url: 'https://taniarascia.github.io/primitive',\n  },\n  {\n    name: 'Snek',\n    date: '2019',\n    slug: 'snek',\n    tagline: 'A terminal-based Snake',\n    writeup: '/snake-game-in-javascript',\n    highlight: true,\n  },\n  {\n    date: '2020',\n    name: 'webpack Boilerplate',\n    slug: 'webpack-boilerplate',\n    tagline: 'The webpack 5 boilerplate',\n  },\n  {\n    name: 'Chat App',\n    date: '2021',\n    slug: 'chat',\n    tagline: 'Socket.io chat app',\n  },\n  {\n    name: 'React Advanced Form',\n    date: '2022',\n    slug: 'react-advanced-form',\n    tagline: 'A schema-based form system',\n  },\n]\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport const Hero = ({\n  highlight,\n  subTitle,\n  title,\n  description,\n  children,\n  type = 'page',\n  breadcrumb,\n  hasSearch,\n}) => {\n  return (\n    <header\n      className={`hero hero-${type}`}\n      style={hasSearch ? { marginBottom: '1.5rem' } : {}}\n    >\n      {subTitle && (\n        <div className=\"sub-title\">\n          {breadcrumb && (\n            <div>\n              <Link to={breadcrumb.value}>{breadcrumb.label}</Link> /\n            </div>\n          )}\n          <div>\n            {highlight && <span className=\"highlight\">{highlight}</span>}\n            <span>{subTitle}</span>\n          </div>\n        </div>\n      )}\n      {title && <h1>{title}</h1>}\n      {description && (\n        <div\n          className=\"hero-description\"\n          style={hasSearch ? { marginBottom: '0' } : {}}\n        >\n          {description}\n        </div>\n      )}\n\n      {children}\n    </header>\n  )\n}\n"],"names":["W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","R","GATSBY___IMAGE","z","e","t","a","i","s","position","overflow","width","height","display","verticalAlign","className","style","P","h","left","top","transform","transition","willChange","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","bottom","right","objectFit","objectPosition","d","H","F","_ref5","layout","paddingTop","maxWidth","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","length","map","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","replace","ae","_len","arguments","Array","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","getSimplifiedPosts","posts","options","post","_post$node$frontmatte","_post$node$frontmatte2","_post$node$frontmatte3","id","node","date","frontmatter","slug","fields","tags","categories","title","description","thumbnails","thumbnail","childImageSharp","gatsbyImageData","slugify","string","match","x","toLowerCase","join","getFormattedDate","option","dateArr","split","startsWith","slice","isNewPost","postDate","Date","today","diffTime","Math","abs","floor","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","trim","filter","locale","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","preserveCamelCase","lastIndex","m1","charAt","_","identifier","postProcess","module","exports","Post","_ref","formattedDate","prefix","newspaper","query","newPost","useMemo","React","Link","to","getTitle","highlightStart","search","highlightEnd","Posts","data","showYears","hideDate","yearOnly","props","postsByYear","collection","forEach","_post$date","year","_toConsumableArray","years","Object","keys","reverse","assign","Heading","buttonText","Index","latestNotes","edges","latestArticles","highlights","notes","articles","simplifiedHighlights","Helmet","config","siteTitle","SEO","PageLayout","Hero","href","target","rel","xmlns","viewBox","fill","GatsbyImage","projectsList","project","highlight","name","tagline","writeup","url","Layout","postURL","postNode","postPath","postSEO","customDescription","siteLogo","postMeta","excerpt","siteUrl","schemaOrgJSONLD","alternateName","push","itemListElement","item","headline","content","property","subTitle","breadcrumb","hasSearch","marginBottom","value","label"],"sourceRoot":""}